// Code generated by entc, DO NOT EDIT.

package market

import (
	"time"
)

const (
	// Label holds the string label denoting the market type in the database.
	Label = "market"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldSymbol holds the string denoting the symbol field in the database.
	FieldSymbol = "symbol"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldBorrowIndex holds the string denoting the borrow_index field in the database.
	FieldBorrowIndex = "borrow_index"
	// FieldBorrowRate holds the string denoting the borrow_rate field in the database.
	FieldBorrowRate = "borrow_rate"
	// FieldSupplyRate holds the string denoting the supply_rate field in the database.
	FieldSupplyRate = "supply_rate"
	// FieldCash holds the string denoting the cash field in the database.
	FieldCash = "cash"
	// FieldCollateralFactor holds the string denoting the collateral_factor field in the database.
	FieldCollateralFactor = "collateral_factor"
	// FieldExchangeRate holds the string denoting the exchange_rate field in the database.
	FieldExchangeRate = "exchange_rate"
	// FieldReserveFactor holds the string denoting the reserve_factor field in the database.
	FieldReserveFactor = "reserve_factor"
	// FieldReserves holds the string denoting the reserves field in the database.
	FieldReserves = "reserves"
	// FieldTotalBorrows holds the string denoting the total_borrows field in the database.
	FieldTotalBorrows = "total_borrows"
	// FieldTotalSupply holds the string denoting the total_supply field in the database.
	FieldTotalSupply = "total_supply"
	// FieldUnderlyingAddress holds the string denoting the underlying_address field in the database.
	FieldUnderlyingAddress = "underlying_address"
	// FieldUnderlyingName holds the string denoting the underlying_name field in the database.
	FieldUnderlyingName = "underlying_name"
	// FieldUnderlyingSymbol holds the string denoting the underlying_symbol field in the database.
	FieldUnderlyingSymbol = "underlying_symbol"
	// FieldUnderlyingPrice holds the string denoting the underlying_price field in the database.
	FieldUnderlyingPrice = "underlying_price"
	// FieldUnderlyingDecimals holds the string denoting the underlying_decimals field in the database.
	FieldUnderlyingDecimals = "underlying_decimals"
	// FieldUnderlyingPriceUsd holds the string denoting the underlying_price_usd field in the database.
	FieldUnderlyingPriceUsd = "underlying_price_usd"
	// FieldBlockNumber holds the string denoting the block_number field in the database.
	FieldBlockNumber = "block_number"
	// FieldBlockTimestamp holds the string denoting the block_timestamp field in the database.
	FieldBlockTimestamp = "block_timestamp"
	// Table holds the table name of the market in the database.
	Table = "markets"
)

// Columns holds all SQL columns for market fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldAddress,
	FieldSymbol,
	FieldName,
	FieldBorrowIndex,
	FieldBorrowRate,
	FieldSupplyRate,
	FieldCash,
	FieldCollateralFactor,
	FieldExchangeRate,
	FieldReserveFactor,
	FieldReserves,
	FieldTotalBorrows,
	FieldTotalSupply,
	FieldUnderlyingAddress,
	FieldUnderlyingName,
	FieldUnderlyingSymbol,
	FieldUnderlyingPrice,
	FieldUnderlyingDecimals,
	FieldUnderlyingPriceUsd,
	FieldBlockNumber,
	FieldBlockTimestamp,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultSymbol holds the default value on creation for the "symbol" field.
	DefaultSymbol string
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultBorrowIndex holds the default value on creation for the "borrow_index" field.
	DefaultBorrowIndex string
	// DefaultBorrowRate holds the default value on creation for the "borrow_rate" field.
	DefaultBorrowRate string
	// DefaultSupplyRate holds the default value on creation for the "supply_rate" field.
	DefaultSupplyRate string
	// DefaultCash holds the default value on creation for the "cash" field.
	DefaultCash string
	// DefaultCollateralFactor holds the default value on creation for the "collateral_factor" field.
	DefaultCollateralFactor string
	// DefaultExchangeRate holds the default value on creation for the "exchange_rate" field.
	DefaultExchangeRate string
	// DefaultReserveFactor holds the default value on creation for the "reserve_factor" field.
	DefaultReserveFactor string
	// DefaultReserves holds the default value on creation for the "reserves" field.
	DefaultReserves string
	// DefaultTotalBorrows holds the default value on creation for the "total_borrows" field.
	DefaultTotalBorrows string
	// DefaultTotalSupply holds the default value on creation for the "total_supply" field.
	DefaultTotalSupply string
	// DefaultUnderlyingAddress holds the default value on creation for the "underlying_address" field.
	DefaultUnderlyingAddress string
	// DefaultUnderlyingName holds the default value on creation for the "underlying_name" field.
	DefaultUnderlyingName string
	// DefaultUnderlyingSymbol holds the default value on creation for the "underlying_symbol" field.
	DefaultUnderlyingSymbol string
	// DefaultUnderlyingPrice holds the default value on creation for the "underlying_price" field.
	DefaultUnderlyingPrice string
	// DefaultUnderlyingDecimals holds the default value on creation for the "underlying_decimals" field.
	DefaultUnderlyingDecimals uint32
	// DefaultUnderlyingPriceUsd holds the default value on creation for the "underlying_price_usd" field.
	DefaultUnderlyingPriceUsd string
	// DefaultBlockNumber holds the default value on creation for the "block_number" field.
	DefaultBlockNumber uint64
	// DefaultBlockTimestamp holds the default value on creation for the "block_timestamp" field.
	DefaultBlockTimestamp uint32
)
