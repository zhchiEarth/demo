// Code generated by entc, DO NOT EDIT.

package account

import (
	"time"
)

const (
	// Label holds the string label denoting the account type in the database.
	Label = "account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldHasBorrowed holds the string denoting the has_borrowed field in the database.
	FieldHasBorrowed = "has_borrowed"
	// FieldCountLiquidated holds the string denoting the count_liquidated field in the database.
	FieldCountLiquidated = "count_liquidated"
	// FieldCountLiquidator holds the string denoting the count_liquidator field in the database.
	FieldCountLiquidator = "count_liquidator"
	// FieldHealth holds the string denoting the health field in the database.
	FieldHealth = "health"
	// FieldTotalCollateralValueInUsd holds the string denoting the total_collateral_value_in_usd field in the database.
	FieldTotalCollateralValueInUsd = "total_collateral_value_in_usd"
	// FieldTotalBorrowValueInUsd holds the string denoting the total_borrow_value_in_usd field in the database.
	FieldTotalBorrowValueInUsd = "total_borrow_value_in_usd"
	// FieldBlockNumber holds the string denoting the block_number field in the database.
	FieldBlockNumber = "block_number"
	// EdgeTokens holds the string denoting the tokens edge name in mutations.
	EdgeTokens = "tokens"
	// Table holds the table name of the account in the database.
	Table = "accounts"
	// TokensTable is the table that holds the tokens relation/edge.
	TokensTable = "account_ctokens"
	// TokensInverseTable is the table name for the AccountCToken entity.
	// It exists in this package in order to avoid circular dependency with the "accountctoken" package.
	TokensInverseTable = "account_ctokens"
	// TokensColumn is the table column denoting the tokens relation/edge.
	TokensColumn = "account_tokens"
)

// Columns holds all SQL columns for account fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldAddress,
	FieldHasBorrowed,
	FieldCountLiquidated,
	FieldCountLiquidator,
	FieldHealth,
	FieldTotalCollateralValueInUsd,
	FieldTotalBorrowValueInUsd,
	FieldBlockNumber,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultHasBorrowed holds the default value on creation for the "has_borrowed" field.
	DefaultHasBorrowed bool
	// DefaultCountLiquidated holds the default value on creation for the "count_liquidated" field.
	DefaultCountLiquidated uint32
	// DefaultCountLiquidator holds the default value on creation for the "count_liquidator" field.
	DefaultCountLiquidator uint32
	// DefaultHealth holds the default value on creation for the "health" field.
	DefaultHealth string
	// DefaultTotalCollateralValueInUsd holds the default value on creation for the "total_collateral_value_in_usd" field.
	DefaultTotalCollateralValueInUsd string
	// DefaultTotalBorrowValueInUsd holds the default value on creation for the "total_borrow_value_in_usd" field.
	DefaultTotalBorrowValueInUsd string
	// DefaultBlockNumber holds the default value on creation for the "block_number" field.
	DefaultBlockNumber uint64
)
